1. What is CloudFront?
- CDN (Content Delivery Network) by AWS.

- Delivers content (HTML, CSS, JS, images, videos, APIs) with low latency via edge locations.

3. CloudFront Use Cases.
- Static site hosting (S3 + CloudFront).

- Dynamic web apps (EC2/ALB + CloudFront).

- Secure API distribution.

- Live/on-demand video streaming.

4. CloudFront with S3.
- S3 Bucket as Origin.

- Option to block public access and use OAI (Origin Access Identity) or Origin Access Control (OAC) for secure access.

5. Security Features
- HTTPS only using SSL/TLS.

- Signed URLs & Signed Cookies for content access control.

- Geo Restriction (Whitelist or Blacklist countries).

- WAF Integration to filter web traffic.

- Field-level encryption.

6. Performance Optimization
- Caching at Edge with TTL

- Compressing content (gzip, Brotli)

- Lambda@Edge for custom logic at edge (header rewrite, redirect, auth)

7. Logging and Monitoring
- Access Logs stored in S3

- CloudWatch Metrics (Requests, 4xx/5xx Errors, Bytes Downloaded)

8. Pricing
- Based on:

- Data transfer out

- Number of HTTP/HTTPS requests

- Invalidation requests

- Lambda@Edge invocations

- Real-Time Metrics available

## üîÑ CloudFront - Key Differences

### 1. CloudFront vs S3 Static Website Hosting

| Feature               | CloudFront (CDN)                          | S3 Static Website Hosting               |
|------------------------|-------------------------------------------|------------------------------------------|
| Latency               | Low (due to global edge locations)        | Higher (served directly from S3 region)  |
| HTTPS Support         | Native, supports custom SSL certs         | Only via CloudFront                     |
| Geo Restriction       | Supported                                 | Not supported                           |
| Access Control        | Signed URLs/Cookies, WAF integration      | Basic, public or IAM-based              |
| Cost                  | Pay-per-use for edge caching              | Lower, no edge caching                  |

---

### 2. CloudFront OAI vs OAC

| Feature             | OAI (Origin Access Identity)            | OAC (Origin Access Control)                  |
|---------------------|------------------------------------------|----------------------------------------------|
| Type               | Legacy access control method             | Modern replacement for OAI                   |
| Supports            | Only for S3 origins                      | S3 and future AWS services                   |
| IAM Role Usage      | No                                       | Yes, uses IAM service principal              |
| Enhanced Security   | ‚ùå                                       | ‚úÖ Supports signed requests                  |
| Recommendation      | Deprecated                               | Preferred going forward                      |

---

### 3. CloudFront Signed URL vs Signed Cookie

| Feature             | Signed URL                          | Signed Cookie                             |
|---------------------|--------------------------------------|--------------------------------------------|
| Use Case           | Single file access                   | Access multiple files with one token       |
| Delivery Type       | Works best with direct file links    | Used with media players or apps            |
| Implementation      | Simpler for small use cases          | Better for complex access policies         |

---

### 4. CloudFront vs Global Accelerator

| Feature             | CloudFront (CDN)                     | AWS Global Accelerator                     |
|---------------------|---------------------------------------|---------------------------------------------|
| Focus              | Content delivery                      | Application acceleration & failover        |
| Caching            | Yes (at edge locations)               | No caching                                  |
| Ideal For          | Static/dynamic content delivery       | TCP/UDP traffic, cross-region routing       |
| Layer              | Application layer (HTTP/HTTPS)        | Network layer (IP-based)                   |



