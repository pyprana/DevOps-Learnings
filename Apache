- Apache webserver
- Apache Web Server (also known as httpd) is an open-source web server software that delivers web content over the internet using the HTTP protocol.

- What:
- It serves static (HTML, images) and dynamic (via PHP, Python) content to clients.

- Why:
- Reliable, widely supported, modular, and configurable.

- When:
- Used when you need a flexible, stable web server for websites or backend services.

- Where:
- Runs on Linux, Windows, macOS. Commonly used in LAMP stacks (Linux, Apache, MySQL, PHP).

- Key Features:
- Virtual hosting (host multiple sites)

- Loadable modules (e.g., mod_ssl, mod_rewrite)

- .htaccess support for per-directory configs

- SSL/TLS support

- Example:
- To install on Ubuntu:

- bash
- sudo apt update
- sudo apt install apache2
- To start the server:

- bash
- sudo systemctl start apache2

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- The primary purpose of Apache httpd is to serve web content (HTML, images, scripts) to clients (usually browsers) over the HTTP/HTTPS protocols.

- Core Functions:
- Deliver static content (e.g., HTML, CSS, JS, images).

- Interface with dynamic content via CGI, PHP, or reverse proxy.

- Handle virtual hosting (multiple websites on one server).

- Provide SSL/TLS encryption.

- Support URL rewriting, redirects, and access control.

- Used widely in traditional LAMP stack deployments.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- Set up a load-balanced cluster using Apache with the mod_proxy and mod_proxy_balancer modules.

- Objective:
- Distribute traffic to multiple backend servers (Apache or app servers) for scalability and high availability.

- Steps to Create an Apache Load Balancer Cluster:
- Install Apache on Load Balancer Node

- bash
- sudo apt update
- sudo apt install apache2
- Enable Required Modules

bash
- sudo a2enmod proxy
- sudo a2enmod proxy_balancer
- sudo a2enmod proxy_http
- sudo a2enmod lbmethod_byrequests
- sudo systemctl restart apache2
- Create a Balancer Virtual Host Config
- Example config file: /etc/apache2/sites-available/balancer.conf

- apache
<VirtualHost *:80>
  ServerName loadbalancer.example.com

  <Proxy "balancer://mycluster">
    BalancerMember http://192.168.1.101:80
    BalancerMember http://192.168.1.102:80
    ProxySet lbmethod=byrequests
  </Proxy>

  ProxyPass "/" "balancer://mycluster/"
  ProxyPassReverse "/" "balancer://mycluster/"
</VirtualHost>
Enable the Site and Restart Apache

- bash
sudo a2ensite balancer.conf
sudo systemctl reload apache2
Ensure Backend Nodes (192.168.1.101, 102) Run Apache/App

- Result:
- Apache now routes traffic to multiple backend nodes using round-robin or other balancing methods.

