Kubernetes
Q - How you manage secrets and variables in Kubernetes?
A - Secrets: Store and manage sensitive data securely.
- ConfigMaps: Store and manage non-sensitive configuration data.
- Both can be used in pods as volumes or environment variables for secure and efficient configuration management.

Q - How to troubleshot issues when  pod failed?
A - Check Pod Status: Use the command kubectl get pods to check the status of the pod.
- Describe Pod: Use kubectl describe pod <pod-name> to get detailed information about the pod, including events and error messages.
- View Logs: Use kubectl logs <pod-name> to view the logs of the pod's containers for error messages.
- Check Events: Use kubectl get events to check for cluster-wide events that might affect the pod.
- Inspect YAML: Review the pod's YAML configuration for any misconfigurations.

Q - How Kubernetes handle network communication between containers..?
A - Kubernetes uses a flat, cluster-wide networ ko let all the pods communicate directly.
  - To ensure seamless communication between contaoners, services and external systems.
  - Used when pods need to talk to each other across namespaces or nodes.
  - Handled via CNI(Container Network Interface) plugins. E.,(Calico, Flannel, Cilum).
  - Examples - Pod-to-Pod:curl<pod-ip>
  - Pod-to-Service: curl
  - http://service-name>
  - Across Nodes : CNI ensures routing between pods on different nodes.
