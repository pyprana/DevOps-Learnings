- We need to build an executable file out of this git.
- This is called CI.
- The famous tool we use is Jenkins.
- We use jenkins with Maven to build to the code.
- We take the raw code from the developer we check whether unit test cases are running or not or is getting compiled or not.
- All these things we check we integrate the code.
- Once the code is ready we need to host it.
- We need to deploy the code we need to setup and infrastructure.
- Take a machine install Java, install Tomcat and then dependencies copy the code and then deploy the code.
- We need to setup and infrastructure.
- We need CM tools to make changesto our infrastructure that is called CM.
- Once the environment is setup we use containers to host the applications like .war files or tomcat or app we use containers.
- We are packaging together and runnng it as a container.
- We are using Docker and container to manage the apps.

------------------------------------------------------------------------------------------------------------------------------------

Parallel jobs in Jenkins mean multiple jobs or job stages run simultaneously, instead of waiting for each other to complete.

- Where it's used:
- In Pipelines, using parallel block to run stages together.

- In Matrix jobs, testing across multiple environments.

- In multi-configuration projects or distributed builds (e.g., on multiple agents).

- Why it's useful:
- Speeds up builds by doing tasks like testing, linting, or deploying in parallel.

- Efficient resource use across multiple agents.
- Example (Declarative Pipeline):
pipeline {
  agent any
  stages {
    stage('Parallel Tasks') {
      parallel {
        stage('Unit Tests') {
          steps {
            echo 'Running unit tests...'
          }
        }
        stage('Lint Check') {
          steps {
            echo 'Running lint checks...'
          }
        }
      }
    }
  }
}

------------------------------------------------------------------------------------------------------------------------------------

- Yes, Jenkins build agents can be deployed as Docker containers. 
- This is a common and scalable method used in modern CI/CD setups.

âœ… Why use Docker for Jenkins agents?
- Isolation: Each agent runs in its own container.
- Consistency: Same environment across builds.
- Scalability: Easily spin up/down agents.
- Easy cleanup: Containers can be removed after builds.

- How to deploy?
- Install Docker on the Jenkins host
- Install Docker plugin in Jenkins
- Define Docker agent template in Jenkins (e.g., via Docker plugin or JCasC)
- Use a Docker image for the agent (e.g., jenkins/inbound-agent)
- Configure pipeline to use Docker agent:
pipeline {
  agent {
    docker {
      image 'maven:3.8.4-openjdk-17'
    }
  }
  stages {
    stage('Build') {
      steps {
        sh 'mvn clean install'
      }
    }
  }
}

------------------------------------------------------------------------------------------------------------------------------------

Option 1: Docker Compose Setup

