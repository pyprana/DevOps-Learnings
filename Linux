Q - You need to find out why a server is running slowly, what steps would you take
A - You can start by checking the overall load on the system so for this we can make use of. 
  - top command.
  - htop command.
  - Which will basically look the usage of your cpu and also memory and then check the processes which are consuming execssive resources, so when we run the htop or top.
    command this will give us the CPU utilization and the memory utilization for the respective processes and we can look at that to see which process is consuming more resources.
  - We can also use of Iostat command and the itop command to check the disk input, output we can make use of free -m to check the memory usage df -h command to check for the disk
    space utilization and we can also check for network issues by making use of the netstat command or the ss command then we can finally review the system logs which are available 
    in the /var/log/ path for any errors or any warnings.
  - So that is how we troubleshoot slowness of the system.

Q - A users home directory is filling up disk space on the root partition. How would you resolve this..?
  - For this we need to check disk usage of the user so for this we can make use of the command du -sh/home/user and then the path of the user directory and this command will help
    us identify the large files or directories that are available with the path if possible we can move these large files or directories that are available with the path

Q - You need to automate backups of a directory to a remote server..How would you do it..?
A - Use rsync for efficient file transfers.
  - Setups SSH based authentication
  - So basically from source to destination machine we can setup SSH authentication.

Q - A critical server has crashed and wont restart? what steps do you take to troubelshoot and resolve the issues.?
  - Check the status and logs of the service using.
  - systemctl status servicename.
  - journal -u servicename.
  - Look for any configuration errors or missing dependecies that are missing for the service if there are any configuration errors we can verify that by making use of basically 
    validating your configuration file. 
  - syntax (nginx -t) if its apache then we use apachetl config test.

Q - You need to automate backups of a directory to a remote server ?
  - How would you do it..?
  - Use rsync for efficient file transfers setup SSH based authentication between the local and remote machine so basically from source to destination
    machine we can set up SSH authentication between them then we will write a script that will run the rsync command with your desired options and schedule that script to run
    the cron jobs.

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

- To check logs in Linux:

- In var/log the log files will be stored tail -50 commad to reduce the no of logs.

- Common Log Location:
- Most system logs are in:

- bash
- /var/log/

- Basic Commands:
- View logs:

- bash
- cat /var/log/syslog         # Debian/Ubuntu
- cat /var/log/messages       # RHEL/CentOS

- Live updates (real-time):

- bash
- tail -f /var/log/syslog

- Search logs:

- bash
- grep "error" /var/log/syslog

- List all log files:

- bash
- ls /var/log/

- View boot logs:

- bash
- dmesg
- Systemd journal logs (for newer systems):

- bash
- journalctl
- journalctl -xe             # For errors
- journalctl -u nginx        # Logs for a specific service

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

### Common Mistakes in Linux/System Administration

1. You confuse `/var/log`, `/etc`, and `/usr/bin`.  
   You miss critical files or configs.

2. You change the SSH port.  
   You lock yourself out of the server.

3. You try to kill a zombie process.  
   It still shows up in `ps`.

4. You install packages with `apt`.  
   You don’t check what gets removed.

5. You delete oversized logs.  
   The app stops working.

6. You create too many `.sh` files with `sud

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

𝗕𝗮𝘀𝗶𝗰𝘀:
1. `man` - Skim through manual for better understanding.
2. `nano` / `vim` - Use nano for basic editing, vim for advanced editing.
3. `ls -l` - List files with detailed info.
4. `ssh` - Connect to remote machines securely.
5. `df` / `du -hs *` - Check disk space usage.
6. `chown` / `chmod` - Change ownership and permissions of files.
7. `dig` - DNS lookup to find IPs of hostnames.

𝗘𝘃𝗲𝗿𝘆𝗱𝗮𝘆 𝗨𝘀𝗲:
1. `history` - View command history.
2. `cd -` - Switch to the previous directory.
3. `xargs` - Build and execute commands from input, with parallel execution support.
4. `pstree -p` - Display the process tree with process IDs.
5. `pgrep` / `pkill` - Find and signal processes by name.

𝗣𝗿𝗼𝗰𝗲𝘀𝘀𝗶𝗻𝗴 𝗙𝗶𝗹𝗲𝘀 𝗮𝗻𝗱 𝗗𝗮𝘁𝗮:
1. `find . -iname '*file*'` - Locate files by name.
2. `grep` / `ack` / `ag` - Search within files, with ag being the fastest.
3. `awk` / `sed` - Manipulate and format text.
4. `sort` / `uniq` - Sort and find unique lines.
5. `cut` / `paste` - Extract or combine columns of text.
 
𝗦𝘆𝘀𝘁𝗲𝗺 𝗗𝗲𝗯𝘂𝗴𝗴𝗶𝗻𝗴:
1. `top` / `htop` - View system performance and resource usage.
2. `netstat -lntp` - List all listening ports and associated processes.
3. `dstat` - Combined system stats view.
4. `strace` - Trace system calls and signals.
5. `lsof` - List open files and associated processes.
